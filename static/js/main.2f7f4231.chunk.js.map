{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","counter","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","className","type","onClick","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"uMAUaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAYlB,OAXAC,KAAKD,QAAUE,aAAY,WACzB,IAAQJ,EAAS,EAAKD,MAAdC,KAER,EAAKK,SAAS,CACZL,KAAM,IAAIC,OAIZK,QAAQC,IAAIP,EAAKQ,wBAChB,KAEIL,KAAKD,UAnBhB,gCAsBE,SAAmBO,GACjB,IAAQC,EAASD,EAATC,KAEJA,IAASP,KAAKQ,MAAMD,MAEtBJ,QAAQC,IAAR,qCAA0CG,EAA1C,eAAqDP,KAAKQ,MAAMD,SA3BtE,kCA+BE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,WAjCzB,oBAqCE,WACE,OACEC,KAAKJ,MAAMC,KAAKQ,yBAvCtB,GAA2BK,IAAMC,Y,OCApBC,EAAb,4MACEhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,GAHf,4CAME,WAAU,IAAD,OACCD,EAAmBb,KAAKJ,MAAxBiB,eACAC,EAAcd,KAAKJ,MAAnBkB,UAER,OACE,qCACE,wBACEC,UAAU,SACVC,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CACZW,gBAAgB,KALtB,wBAYA,wBACEE,UAAU,SACVC,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CACZW,gBAAgB,KALtB,wBAYA,wBACEE,UAAU,SACVC,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEY,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,KAJjE,6BAUA,8CAEG,IACAP,GACC,cAAC,EAAD,CAAON,KAAMO,cAlDzB,GAAyBJ,IAAMC,WCP/BU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2f7f4231.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: number,\n}\n\ninterface State {\n  date: Date,\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  counter: NodeJS.Timeout | undefined;\n\n  componentDidMount() {\n    this.counter = setInterval(() => {\n      const { date } = this.state;\n\n      this.setState({\n        date: new Date(),\n      });\n\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n\n    return this.counter;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = prevProps;\n\n    if (name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.counter) {\n      clearInterval(this.counter);\n    }\n  }\n\n  render() {\n    return (\n      this.state.date.toLocaleTimeString()\n    );\n  }\n}\n","/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock/Clock';\n\ninterface State {\n  isClockVisible: boolean,\n  clockName: number\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n    const { clockName } = this.state;\n\n    return (\n      <>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              isClockVisible: true,\n            });\n          }}\n        >\n          Show Clock\n        </button>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              isClockVisible: false,\n            });\n          }}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.round(Math.random() * 100) + 1 });\n          }}\n        >\n          Set random name\n        </button>\n\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && (\n            <Clock name={clockName} />) }\n        </p>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}